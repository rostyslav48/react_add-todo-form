{"version":3,"sources":["api/users.ts","api/todos.ts","components/TodoAddForm/TodoAddForm.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["users","id","name","username","email","todos","title","completed","userId","generateNewId","tasks","tasksIds","map","Math","max","TodoAddForm","addTask","useState","setTitle","titleError","setTitleError","selectedUserId","setSelectedUserId","userError","setUserError","action","method","onSubmit","event","preventDefault","user","find","className","type","placeholder","value","onChange","target","UserInfo","href","TodoInfo","todo","classnames","TodoList","preparedTodoTasks","todosFromServer","usersFromServer","App","setTodos","newTask","prevState","ReactDOM","render","document","getElementById"],"mappings":"6MAiEeA,G,MA/DO,CACpB,CACEC,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,4BCtCIC,EArBO,CACpB,CACEJ,GAAI,EACJK,MAAO,qBACPC,WAAW,EACXC,OAAQ,GAEV,CACEP,GAAI,GACJK,MAAO,kBACPC,WAAW,EACXC,OAAQ,GAEV,CACEP,GAAI,EACJK,MAAO,qCACPC,WAAW,EACXC,OAAQ,I,OCTNC,EAAgB,SAACC,GACrB,IAAMC,EAAWD,EAAME,KAAI,qBAAGX,MAE9B,OAAOY,KAAKC,IAAL,MAAAD,KAAI,YAAQF,IAAY,GAGpBI,EAA+B,SAAC,GAA+B,IAA7Bf,EAA4B,EAA5BA,MAAOK,EAAqB,EAArBA,MAAOW,EAAc,EAAdA,QAC3D,EAA0BC,mBAAS,IAAnC,mBAAOX,EAAP,KAAcY,EAAd,KACA,EAAoCD,oBAAS,GAA7C,mBAAOE,EAAP,KAAmBC,EAAnB,KAMA,EAA4CH,mBAAS,GAArD,mBAAOI,EAAP,KAAuBC,EAAvB,KACA,EAAkCL,oBAAS,GAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KAkCA,OAEE,uBACEC,OAAO,aACPC,OAAO,OACPC,SA1BiB,SAACC,GACpBA,EAAMC,iBAENT,GAAed,GACfkB,GAAcH,GAETf,GAAUe,IAIfL,EAAQ,CACNf,GAAIQ,EAAcJ,GAClBC,QACAC,WAAW,EACXC,OAAQa,EACRS,KAAM9B,EAAM+B,MAAK,qBAAG9B,KAAgBoB,MAAmB,OArBzDH,EAAS,IACTE,GAAc,GACdE,EAAkB,GAClBE,GAAa,KA0Bb,UAKE,sBAAKQ,UAAU,QAAf,UACE,uBACE,UAAQ,aACRC,KAAK,OACLC,YAAY,QACZC,MAAO7B,EACP8B,SArDkB,SAACR,GACzBV,EAASU,EAAMS,OAAOF,OACtBf,GAAc,MAsDTD,GACC,sBAAMa,UAAU,QAAhB,qCAIJ,sBAAKA,UAAU,QAAf,UACE,yBACE,UAAQ,aACRG,MAAOd,EACPe,SA1DiB,SAACR,GACxBN,GAAmBM,EAAMS,OAAOF,OAChCX,GAAa,IAqDT,UAKE,wBAAQW,MAAM,IAAd,2BAECnC,EAAMY,KAAI,SAAAkB,GAAI,OACb,wBAAsBK,MAAOL,EAAK7B,GAAlC,SACG6B,EAAK5B,MADK4B,EAAK7B,UAMrBsB,GACC,sBAAMS,UAAU,QAAhB,qCAIJ,wBAAQC,KAAK,SAAS,UAAQ,eAA9B,qB,gBC7FOK,EAA4B,SAAC,GAAc,IAAZR,EAAW,EAAXA,KAClC5B,EAAgB4B,EAAhB5B,KAAME,EAAU0B,EAAV1B,MAEd,OACE,mBAAG4B,UAAU,WAAWO,KAAI,iBAAYnC,GAAxC,SACGF,KCDMsC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACvC,0BAEE,UAASA,EAAKxC,GACd+B,UAAWU,IAAW,WAAY,CAChC,sBAAuBD,EAAKlC,YAJhC,UAOE,oBAAIyB,UAAU,kBAAd,SACGS,EAAKnC,QAGPmC,EAAKX,MACJ,cAAC,EAAD,CAAUA,KAAMW,EAAKX,SAXlBW,EAAKxC,KCHD0C,EAA4B,SAAC,GAAe,IAAbtC,EAAY,EAAZA,MAC1C,OACE,yBAAS2B,UAAU,WAAnB,SACG3B,EAAMO,KAAI,SAAA6B,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,UCFlBG,EAAoCC,EAAgBjC,KAAI,SAAA6B,GAC5D,IAAMX,EAAOgB,EAAgBf,MAAK,gBAAG9B,EAAH,EAAGA,GAAH,OAAYwC,EAAKjC,SAAWP,MAAO,KAErE,OAAO,2BACFwC,GADL,IAEEX,YAISiB,EAAM,WACjB,MAA0B9B,mBAAS2B,GAAnC,mBAAOvC,EAAP,KAAc2C,EAAd,KAMA,OACE,sBAAKhB,UAAU,MAAf,UACE,+CAEA,cAAC,EAAD,CACEhC,MAAO8C,EACPzC,MAAOA,EACPW,QAXU,SAACiC,GACfD,GAAS,SAACE,GAAD,4BAAmBA,GAAnB,CAA8BD,UAYrC,cAAC,EAAD,CAAU5C,MAAOA,QClCvB8C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9b6d2027.chunk.js","sourcesContent":["import { User } from '../types';\n\nconst users: User[] = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n\nexport default users;\n","import { Todo } from '../types';\n\nconst todos: Todo[] = [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n\nexport default todos;\n","import React, { useState } from 'react';\n\nimport { PreparedTodo, User } from '../../types';\n\ntype Props = {\n  users: User[],\n  todos: PreparedTodo[],\n  addTask: (newTask: PreparedTodo) => void,\n};\n\nconst generateNewId = (tasks: PreparedTodo[]) => {\n  const tasksIds = tasks.map(({ id }) => id);\n\n  return Math.max(...tasksIds) + 1;\n};\n\nexport const TodoAddForm: React.FC<Props> = ({ users, todos, addTask }) => {\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [userError, setUserError] = useState(false);\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(+event.target.value);\n    setUserError(false);\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setTitleError(false);\n    setSelectedUserId(0);\n    setUserError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>): void => {\n    event.preventDefault();\n\n    setTitleError(!title);\n    setUserError(!selectedUserId);\n\n    if (!title || !selectedUserId) {\n      return;\n    }\n\n    addTask({\n      id: generateNewId(todos),\n      title,\n      completed: false,\n      userId: selectedUserId,\n      user: users.find(({ id }) => id === selectedUserId) || null,\n    });\n\n    resetForm();\n  };\n\n  return (\n\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <input\n          data-cy=\"titleInput\"\n          type=\"text\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n\n        {titleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <select\n          data-cy=\"userSelect\"\n          value={selectedUserId}\n          onChange={handleUserChange}\n        >\n          <option value=\"0\">Choose a user</option>\n\n          {users.map(user => (\n            <option key={user.id} value={user.id}>\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {userError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { User } from '../../types';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport { PreparedTodo } from '../../types';\n\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: PreparedTodo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    key={todo.id}\n    data-id={todo.id}\n    className={classnames('TodoInfo', {\n      'TodoInfo--completed': todo.completed,\n    })}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n\n    {todo.user && (\n      <UserInfo user={todo.user} />\n    )}\n  </article>\n);\n","import React from 'react';\n\nimport { PreparedTodo } from '../../types';\n\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: PreparedTodo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import { useState } from 'react';\n\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { PreparedTodo } from './types';\n\nimport { TodoAddForm } from './components/TodoAddForm';\nimport { TodoList } from './components/TodoList';\n\nconst preparedTodoTasks: PreparedTodo[] = todosFromServer.map(todo => {\n  const user = usersFromServer.find(({ id }) => todo.userId === id) || null;\n\n  return {\n    ...todo,\n    user,\n  };\n});\n\nexport const App = () => {\n  const [todos, setTodos] = useState(preparedTodoTasks);\n\n  const addTask = (newTask: PreparedTodo): void => {\n    setTodos((prevState) => [...prevState, newTask]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoAddForm\n        users={usersFromServer}\n        todos={todos}\n        addTask={addTask}\n      />\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}